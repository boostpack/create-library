name: Base CI

on:
  workflow_call:

env:
  NODE_VERSION_FILE: .nvmrc

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup & Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v5
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: npm

      - uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: npm

      - uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - run: npm run build

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: npm

      - uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - run: npm run lint:ci

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: npm

      - uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - run: npm run test:ci

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: true

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [setup, build, lint, test]
    if: |
      github.event_name == 'push' && (
        github.ref == 'refs/heads/main' ||
        github.ref == 'refs/heads/master' ||
        github.ref == 'refs/heads/alpha' ||
        github.ref == 'refs/heads/beta' ||
        github.ref == 'refs/heads/next' ||
        github.ref == 'refs/heads/next-major' ||
        endsWith(github.ref, '.x')
      )
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v5
        with:
          node-version-file: ${{ env.NODE_VERSION_FILE }}
          cache: npm

      - uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - uses: actions/download-artifact@v5
        with:
          name: dist
          path: dist/

      - run: npm run publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
